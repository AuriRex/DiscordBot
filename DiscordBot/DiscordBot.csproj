<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants>ADDMETADATA</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>

  <!-- https://gist.github.com/Serivy/74fff320c93176e6ca7f76e1cc139367 -->
  <UsingTask TaskName="GetFirstItem" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <Items ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <FirstItem ParameterType="System.String" Output="true" Required="false" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.Linq" />
      <Code Type="Fragment" Language="cs">FirstItem = Items.First().ItemSpec;</Code>
    </Task>
  </UsingTask>
  
  <PropertyGroup Label="Custom">
    <GitMessageFile>$(ProjectDir)tmp\LastCommitMessage.txt</GitMessageFile>
    <GitDirtyFile>$(ProjectDir)tmp\IsDirty.txt</GitDirtyFile>
  </PropertyGroup>

  <Target Name="WriteSpecialStuffToFile" BeforeTargets="ReadFromFile">
    <Exec Command="git log -1 --pretty=%25%25B &gt; &quot;$(GitMessageFile)&quot;" />
    <!-- what the heck did I create? 😩 -->
    <Exec Command="powershell -Command &quot; %24command = git diff --stat; if(%5Bstring%5D%3A%3AIsNullOrWhitespace(%24command)) { %24result = 'false'; } else { %24result = 'true'; } %5Bstring%5D%3A%3AConcat(%24result) %7C Out-File '$(GitDirtyFile)' &quot;" />
  </Target>

  <Target Name="ReadFromFile" BeforeTargets="Date">
    <ReadLinesFromFile File="$(GitMessageFile)">
      <Output TaskParameter="Lines" ItemName="GitMessage" />
    </ReadLinesFromFile>
    <GetFirstItem Items="@(GitMessage)">
      <Output TaskParameter="FirstItem" PropertyName="FirstItemProperty" />
    </GetFirstItem>
    <Exec Command="echo &quot;$(FirstItemProperty)&quot;" />
    
    <ReadLinesFromFile File="$(GitDirtyFile)">
      <Output TaskParameter="Lines" ItemName="GitIsDirtyLines" />
    </ReadLinesFromFile>
    <GetFirstItem Items="@(GitIsDirtyLines)">
      <Output TaskParameter="FirstItem" PropertyName="GitIsDirty" />
    </GetFirstItem>
  </Target>

  <!-- https://stackoverflow.com/a/50905092 -->
  <Target Name="Date" BeforeTargets="BeforeBuild">
    <WriteLinesToFile File="$(ProjectDir)EmbeddedData.cs" Lines="static partial class EmbeddedData { public static System.DateTime CompileTime = new System.DateTime($([System.DateTime]::UtcNow.Ticks)) %3B public static string LastCommitMessage = &quot;$(FirstItemProperty)&quot; %3B public static bool IsDirty = $(GitIsDirty) %3B }" Overwrite="true" />
  </Target>
  
  <ItemGroup>
    <PackageReference Include="DSharpPlus" Version="4.1.0" />
    <PackageReference Include="DSharpPlus.CommandsNext" Version="4.1.0" />
    <PackageReference Include="DSharpPlus.Interactivity" Version="4.1.0" />
    <PackageReference Include="DSharpPlus.Lavalink" Version="4.1.0" />
    <PackageReference Include="DSharpPlus.VoiceNext" Version="4.1.0" />
    <PackageReference Include="GitInfo" Version="2.2.0" />
    <PackageReference Include="LiteDB" Version="5.0.11" />
    <PackageReference Include="Nekos.Net" Version="1.0.2" />
    <PackageReference Include="SauceNET" Version="1.1.1" />
    <PackageReference Include="Serilog" Version="2.10.0" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="3.0.1" />
    <PackageReference Include="Serilog.Sinks.Console" Version="4.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Communicator\Communicator\Communicator.csproj" />
    <ProjectReference Include="..\DiscordBotPluginBase\DiscordBotPluginBase.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="docker build -t discord-bot-image -f Dockerfile ." />
  </Target>
</Project>
